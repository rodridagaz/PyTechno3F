###############     Cree una funcion que calcule el promedio de N notas

def calcular_promedio_validado():
    notas = []
    n = int(input("¿Cuántas notas desea ingresar? "))
    
    for i in range(n):
        nota = -1  # Inicializamos con un valor inválido
        while nota < 0 or nota > 10:
            nota_input = input(f"Ingrese la nota {i+1} (0-10): ")
            if nota_input.replace('.','',1).isdigit():  # Verifica si es un número válido
                nota = float(nota_input)
                if 0 <= nota <= 10:
                    notas.append(nota)
                else:
                    print("La nota debe estar entre 0 y 10")
            else:
                print("Por favor, ingrese un número válido")
    
    promedio = sum(notas) / len(notas)
    return promedio


# promedio = calcular_promedio_validado()
# print(f"El promedio de las notas es: {promedio:.2f}")



###### Cree una funcion que determine si un color es primario o no, se debe imprimir por  pantalla la leyenda “el color X es primero “ o “el color X no es primario”


# def es_color_primario(color):
#     # Definimos los colores primarios
#     colores_primarios = ['rojo', 'azul', 'amarillo']
    
#     # Verificamos si el color ingresado está en la lista de colores primarios
#     if color.lower() in colores_primarios:
#         print(f"El color {color} es primario.")
#     else:
#         print(f"El color {color} no es primario.")


# es_color_primario('Rojo')      # Salida: El color Rojo es primario.
# es_color_primario('Verde')     # Salida: El color Verde no es primario.
# es_color_primario('amarillo')  # Salida: El color amarillo es primario.

###############  Cree una funcion que determine que numero de una serie de N numeros es mayor
# def encontrar_numero_mayor(numeros):
#     # Inicializamos el mayor con el primer número de la lista
#     mayor = numeros[0]
    
#     # Iteramos sobre la lista de números para encontrar el mayor
#     for numero in numeros:
#         if numero > mayor:
#             mayor = numero
            
#     return mayor

# def encontrar_numero_mayor(numeros):
#     # Inicializamos el mayor con el primer número de la lista
#     mayor = numeros[0]
    
#     # Iteramos sobre la lista de números para encontrar el mayor
#     for numero in numeros:
#         if numero > mayor:
#             mayor = numero
            
#     return mayor

# # Código de inicialización
# def main():
#     n = int(input("¿Cuántos números vas a introducir? "))
#     if n <= 0:
#         print("Por favor, introduce un número mayor que 0.")
#         return

#     numeros = []
#     for i in range(n):
#         numero = float(input(f"Introduce el número {i + 1}: "))
#         numeros.append(numero)

#     mayor = encontrar_numero_mayor(numeros)
#     print(f"El número mayor es: {mayor}")

# # Llamada a la función main directamente
# main()


##########Cree una funcion que dibuje un rectangulo de X filas y X columnas determinadas por el usuario


# def dibujar_rectangulo(filas, columnas):
#     for i in range(filas):
#         print('$' * columnas)

# # Código de inicialización
# def main():
#     filas = int(input("Introduce el número de filas: "))
#     columnas = int(input("Introduce el número de columnas: "))
    
#     # Llamamos a la función para dibujar el rectángulo
#     dibujar_rectangulo(filas, columnas)

# main()



########Cree una funcion que calcule el Factorial de un numero entero positivo

def calcular_factorial(n):
    # Validamos que el número sea entero positivo
    if n < 0:
        return "El factorial no está definido para números negativos."
    elif n == 0 or n == 1:
        return 1
    else:
        return n * calcular_factorial(n - 1)

# Código de inicialización
def main():
    numero = int(input("Introduce un número entero positivo: "))
    resultado = calcular_factorial(numero)
    print(f"El factorial de {numero} es: {resultado}")


main()